#include <iostream>
#include <cstdio>
#include <queue>
using namespace std;




int map[1000][1000];
int visit[1000];
queue<int> q;
int N, M, V;

void dfs(int strt){
  visit[strt]=1;
  printf("%d ", strt);
  for(int i = 1 ; i <= N ; i++){
    if(map[i][strt]==1 && visit[i]!=1){
      dfs(i);
    }
  }
}

void bfs(int strt){
  q.push(strt);
  visit[strt]=1;
  while(!q.empty()){
    int temp = q.front();
    q.pop();
    printf("%d ", temp);

    for(int i=1 ; i <=N ; i++){

      if(map[i][temp]==1 && visit[i]!=1){
        q.push(i);
        visit[i]=1;
      }
    }
  }
}


int main (){
  scanf("%d %d %d", &N, &M, &V);

  for(int i=0; i < M ; i++){
    int tp1, tp2;
    scanf("%d %d", &tp1, &tp2);
    map[tp1][tp2]=1;
    map[tp2][tp1]=1;
  }

  dfs(V);
  printf("\n");
  for(int i=0 ; i <= N ; i++){
    visit[i]=0;
  }
  bfs(V);

}
